package es.upm.dit.service;

import java.util.Date;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Section;

import es.upm.dit.model.User;

public class CreatePDF {
	
	private User user;
	
	public CreatePDF(User user) {
		this.user = user;
	}
	
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
    private static Font small = new Font(Font.FontFamily.TIMES_ROMAN, 12);

    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    public void addMetaData(Document document) {
        document.addTitle("FileToSign");
        document.addSubject("FileToSign");
        document.addKeywords("PDF");
        document.addAuthor("Online Spain Bank");
        document.addCreator("Online Spain Bank");
    }
    
    public void addTitlePage(Document document)
    		throws DocumentException {

        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 1);
        // Lets write a big header
        preface.add(new Paragraph("Welcome to the Online Bank ", catFont));

        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        
        preface.add(new Paragraph(
                "Report generated by: " + System.getProperty("user.name") + ", " + new Date(),
                smallBold));
        addEmptyLine(preface, 2);
 
        preface.add(new Paragraph(
                "These are your personal details submitted in the form.",
                smallBold));
        
        // Adding indentation to left using chunks
        preface.setIndentationLeft(40f);
        preface.add(Chunk.TABBING);
        preface.add(new Chunk("Username: "+ user.getFirstname(), small));
        preface.add(new Paragraph());
        
        preface.setIndentationLeft(40f);
        preface.add(Chunk.TABBING);
        preface.add(new Chunk("Lastname: "+ user.getLastname(), small));
        preface.add(new Paragraph());
        
        preface.setIndentationLeft(40f);
        preface.add(Chunk.TABBING);
        preface.add(new Chunk("Gender: "+ user.getGender(), small));
        preface.add(new Paragraph());
        
        preface.setIndentationLeft(40f);
        preface.add(Chunk.TABBING);
        preface.add(new Chunk("Email: "+ user.getEmail(), small));
        preface.add(new Paragraph());
        
        preface.setIndentationLeft(40f);
        preface.add(Chunk.TABBING);
        preface.add(new Chunk("Country: "+ user.getCountry(), small));
        preface.add(new Paragraph());
        
        preface.setIndentationLeft(40f);
        preface.add(Chunk.TABBING);
        preface.add(new Chunk("Location: "+ user.getStreetname(), small));
        preface.add(new Paragraph());
        
        preface.setIndentationLeft(40f);
        preface.add(Chunk.TABBING);
        preface.add(new Chunk("Phone: "+ user.getPhone(), small));
        preface.add(new Paragraph());
        
        preface.setIndentationLeft(40f);
        preface.add(Chunk.TABBING);
        if(user.isMarried()) {
        	preface.add(new Chunk("Married: yes", small));
        }else {
        	preface.add(new Chunk("Married: no", small));
        }
        preface.add(new Paragraph());
        
        
        
        addEmptyLine(preface, 8);

        preface.add(new Paragraph(
                "This document guarantees the creation of your bank account, keep it safe.",
                redFont));

        document.add(preface);
        // Start a new page
        document.newPage();
    }

    public void addContent(Document document) throws DocumentException {

        // Section : page 2
        Anchor anchor = new Anchor("Page with enveloped signature", catFont);
        anchor.setName("Proof of Legal Validity");

        // New chapter for the legal consent
        Chapter catPart = new Chapter(new Paragraph(anchor), 1);

        Paragraph subPara = new Paragraph("Proof of Legal Validity", subFont);
        Section subCatPart = catPart.addSection(subPara);
        subCatPart.add(new Paragraph("You are consistent with having opened an online account."));
        subCatPart.add(new Paragraph("The data requested will be processed under the responsibility of Online Spain Bank S.A., with the sole purpose of contacting you to manage any incident that may occur in the process of registration as a customer. You can exercise your rights of access, rectification, deletion, limitation, opposition and portability, as well as other rights detailed in the Additional Information on Data Protection, by sending a letter to the following addresses, proving your identity: E-mail: dataprotection@onlinespainbank.com\r\n"));

        // Add all this to the document
        document.add(catPart);

    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }

}
